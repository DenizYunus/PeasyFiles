<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6fHqAO/SmADu3rgF7tuyDO3ZsAvs16wL7NaoDOrUpgzo0qMM58+gDOfO
        nQznzZsM5cqYDOPJlw3dwpIKzrGBAtK1hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAO3YsQDx2aMA79iqN/Hdsqjx3rPF8Nuuw/DZq8Pv2KjF7dakxe3U
        ocTt057E7NKbxevRmsXr0JjG6cyVx9u8gMDoypGF6s2WF+rNlQDCr5QAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA79isAO/YrBvw2anM8Nut//Hftf/x3rH/8dut//DZ
        qv/v2Kb/79aj/+/Vn//u1J3/7dKb/+3Rmv/sz5b/5seL/+vNkv/qzZOS4cSVA+THlAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw2aoA79mrSPDZqvjw2an/8Nmp//DZ
        p//x2KX/8Nej/+/Wof/w1aD/8NWe/+/UnP/v05v/79Ka/+7Qlv/tz5T/7M6T/+vNk9LmyZUV5smUAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDaqwDw2qxP8dqq+/DZ
        qf/v2Kf/79ek//DWov/w1aH/79Wf/+/Vnv/w1Z3/7tOb/+/Smv/w0pn/79KX/+3Qlf/tz5T/7M6V2ebK
        lRnmypUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADb1O8A2Mz0ANjN8yzYzPRl08j4LvDb
        sVPx26z78dqq//DZqf/v2Kb/79ek/+/Wov/w1qL/8Nag//DVnv/w1Z3/7tOb/+/Tmv/w05n/79KY/+7Q
        lv/tz5XY2MCwKcu960/Ov+1Wz8DsDM/A7QAAAAAAAAAAAAAAAAAAAAAAAAAAANvT8ADZzPoA2c/1iNnN
        9f/WyvXk4NDRvPLbrfzx2qv/7tiu/+nUs//s1av/8Nek/+zTof/dxZn/582b//HVnv/u05//6M+m/+vQ
        ov/w05r/8NKY/+vPnOrOvNvBzsDt+s/B7vHNv+w6zcDsAAAAAAAAAAAAAAAAAAAAAAAAAAAA3dTxANrP
        9gDb0PU32s710tfL9v/f0Nz/8t2v//Lbrf/ezMn/yLvo/9rIz//u16f/w66Q/8Otjv+9p4n/5MuZ/+bP
        tv/Ju+H/0L/S/+3SoP/x1Jn/68+l/9DA4v/Pwu380MLtrMu+6RTMv+oAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA3NLyAP//AADb0PQ82Mz2z+DS3v/y3rD/892u/+nUs/+tnKH/tKOd/+bQpf/dyJ//8dmm/+LL
        nv/kzJ3/vqeQ/6iXnf/bxKn/8NSd//DUmv/r0Kb/0MHj/s7C7KXRxe0d0cXuANDD3QAAAAAAAAAAAAAA
        AAAAAAAAAAAAANzT8QDc0/AO3NT0btzS9svZz/f24dPf//Lfsf/037D/0Lye/3Ffb/9zY3X/uqWQ//Pc
        q//w2aj/8tqn/9vEm/91Y2//b19y/6yWg//x1p3/8NSb/+rRp//RwuP/0MTv69HF8KvQxO43zdKCAM/F
        6gAAAAAAAAAAAAAAAADh2vUA4tv0BuDY9oze1vf73dT3/9rQ9//h1N//8t+z//Pgsf/Cspz/pJqi/29c
        bP/DrpT/89ys//Haqv/x2an/4syi/7aqp/9tW27/k351/+7Tnf/x1Z3/6tGn/9LD5P/SxvH/0sfx/9LG
        8N3Qxe870cXwANHI5wAAAAAAAAAAAOHb+ADi2/c34dr47eDY+P/e1ff/3NL3/+LW4P/y4LX/8uCz/+PR
        q//UwqT/1cKh/+/arf/y26z/8dur//Haqf/w2an/4Mqi/864l//YwZn/79Wg//HVnv/q0qj/0sPk/9PH
        8f/UyfH/08fx/9LH8avQye4G0cjvAAAAAAD09PUA4dz5AOLc+V7h2/n+4Nn4/97X9//c1Pfo5dnZsfLg
        tvry4LX/5dSt/8a0mv/l0qn/896v//Lbrf/x2qz/8dqr//Haqv/s1af/yrWV/9W/mP/w16P/8Nah/+zT
        o+fQwtyx1Mnx9tbK8//VyfP/08jy2dLH8BnSx/AAAAAAAAAAAADi3foA4935POLc+uDh2vns39j3tdvV
        +UHy4bxP8uG4+vHftv/w3rX/5NOt/+rYrv/x3bD/8d2v//Hbrf/x2qz/8dqr/+/Xqf/izKL/7NWm//DY
        pv/w2KX/79aj2d/LtCTVy/Ji1svzzNXK8/LVyfO4z8TtENDE7QAAAAAAAAAAAOXg+QDl4fkE4935KeLc
        +S7h2/cL8uLAAPPivU3047r68uG4//Hgtv/x4Lb/8OCz//Desf/w3a//8d2v//Hcrf/x26z/8dqs//HZ
        qv/p0Z7/5MqU/+PJk//kypXU4subF+LGhgDXzvEV1szzNdbK8x3r2/8AzcTlAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD0470A9OO+TPTjvPrz4rv/8uG4//Hgtv/w37X/8N+z/+/fsf/w3bD/8d2v//Lc
        rv/x263/79qt/+XPoP/gyJX/28KM+9O3gIPKsoUD0rmJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPTjvgD0479M9OS9+vTjvP/z4rv/8eK5//Hgt//w4Lb/8N+0//Df
        sv/w3rD/8d2v//HesP/z4rn/8uG4/+3arPvn0aGR4cyhDePNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9OS/APTkwUz05L769OO9//TjvP/y4rv/8uK5//Hg
        t//x37b/8N+0//Hfsv/x3rD/8d+x//Hgtv/t2ar65c+ejdzFlA3gyZcAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD15cEA9eXCOvXkwPH0477/9eS9//Tj
        vP/z47v/8uK5//Hgt//x37b/8N+0//Hesv/w3rH/7dmr+ebPnonaw5ML3siXAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPXnxgD158cK9eXBi/Xl
        wN715L7i9OS94/PjvOPy4rvj8uG44/Hgt+Px37bk8d+15e/est7m0qB+2sGPCt/IlwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPTm
        xAD058YG9OfEHfTmwyHz5cEj8+TAI/LjvyPy4r0j8eK8I/HguiPw4Lkk7+C4HebWrQXq27QAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////4AB//8AAP/+AAB//gAAf/4A
        AH/wAAAP8AAAD/AAAA/4AAAf4AAAD8AAAAfAAAADwAAAA8AAAAPCAABH/gAAf/4AAP/+AAH//gAD//4A
        B///AA////////////////////////////8=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA6fHqAO/SmADu3rgF7tuyDO3ZsAvs16wL7NaoDOrUpgzo0qMM58+gDOfO
        nQznzZsM5cqYDOPJlw3dwpIKzrGBAtK1hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAO3YsQDx2aMA79iqN/Hdsqjx3rPF8Nuuw/DZq8Pv2KjF7dakxe3U
        ocTt057E7NKbxevRmsXr0JjG6cyVx9u8gMDoypGF6s2WF+rNlQDCr5QAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA79isAO/YrBvw2anM8Nut//Hftf/x3rH/8dut//DZ
        qv/v2Kb/79aj/+/Vn//u1J3/7dKb/+3Rmv/sz5b/5seL/+vNkv/qzZOS4cSVA+THlAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw2aoA79mrSPDZqvjw2an/8Nmp//DZ
        p//x2KX/8Nej/+/Wof/w1aD/8NWe/+/UnP/v05v/79Ka/+7Qlv/tz5T/7M6T/+vNk9LmyZUV5smUAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDaqwDw2qxP8dqq+/DZ
        qf/v2Kf/79ek//DWov/w1aH/79Wf/+/Vnv/w1Z3/7tOb/+/Smv/w0pn/79KX/+3Qlf/tz5T/7M6V2ebK
        lRnmypUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADb1O8A2Mz0ANjN8yzYzPRl08j4LvDb
        sVPx26z78dqq//DZqf/v2Kb/79ek/+/Wov/w1qL/8Nag//DVnv/w1Z3/7tOb/+/Tmv/w05n/79KY/+7Q
        lv/tz5XY2MCwKcu960/Ov+1Wz8DsDM/A7QAAAAAAAAAAAAAAAAAAAAAAAAAAANvT8ADZzPoA2c/1iNnN
        9f/WyvXk4NDRvPLbrfzx2qv/7tiu/+nUs//s1av/8Nek/+zTof/dxZn/582b//HVnv/u05//6M+m/+vQ
        ov/w05r/8NKY/+vPnOrOvNvBzsDt+s/B7vHNv+w6zcDsAAAAAAAAAAAAAAAAAAAAAAAAAAAA3dTxANrP
        9gDb0PU32s710tfL9v/f0Nz/8t2v//Lbrf/ezMn/yLvo/9rIz//u16f/w66Q/8Otjv+9p4n/5MuZ/+bP
        tv/Ju+H/0L/S/+3SoP/x1Jn/68+l/9DA4v/Pwu380MLtrMu+6RTMv+oAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA3NLyAP//AADb0PQ82Mz2z+DS3v/y3rD/892u/+nUs/+tnKH/tKOd/+bQpf/dyJ//8dmm/+LL
        nv/kzJ3/vqeQ/6iXnf/bxKn/8NSd//DUmv/r0Kb/0MHj/s7C7KXRxe0d0cXuANDD3QAAAAAAAAAAAAAA
        AAAAAAAAAAAAANzT8QDc0/AO3NT0btzS9svZz/f24dPf//Lfsf/037D/0Lye/3Ffb/9zY3X/uqWQ//Pc
        q//w2aj/8tqn/9vEm/91Y2//b19y/6yWg//x1p3/8NSb/+rRp//RwuP/0MTv69HF8KvQxO43zdKCAM/F
        6gAAAAAAAAAAAAAAAADh2vUA4tv0BuDY9oze1vf73dT3/9rQ9//h1N//8t+z//Pgsf/Cspz/pJqi/29c
        bP/DrpT/89ys//Haqv/x2an/4syi/7aqp/9tW27/k351/+7Tnf/x1Z3/6tGn/9LD5P/SxvH/0sfx/9LG
        8N3Qxe870cXwANHI5wAAAAAAAAAAAOHb+ADi2/c34dr47eDY+P/e1ff/3NL3/+LW4P/y4LX/8uCz/+PR
        q//UwqT/1cKh/+/arf/y26z/8dur//Haqf/w2an/4Mqi/864l//YwZn/79Wg//HVnv/q0qj/0sPk/9PH
        8f/UyfH/08fx/9LH8avQye4G0cjvAAAAAAD09PUA4dz5AOLc+V7h2/n+4Nn4/97X9//c1Pfo5dnZsfLg
        tvry4LX/5dSt/8a0mv/l0qn/896v//Lbrf/x2qz/8dqr//Haqv/s1af/yrWV/9W/mP/w16P/8Nah/+zT
        o+fQwtyx1Mnx9tbK8//VyfP/08jy2dLH8BnSx/AAAAAAAAAAAADi3foA4935POLc+uDh2vns39j3tdvV
        +UHy4bxP8uG4+vHftv/w3rX/5NOt/+rYrv/x3bD/8d2v//Hbrf/x2qz/8dqr/+/Xqf/izKL/7NWm//DY
        pv/w2KX/79aj2d/LtCTVy/Ji1svzzNXK8/LVyfO4z8TtENDE7QAAAAAAAAAAAOXg+QDl4fkE4935KeLc
        +S7h2/cL8uLAAPPivU3047r68uG4//Hgtv/x4Lb/8OCz//Desf/w3a//8d2v//Hcrf/x26z/8dqs//HZ
        qv/p0Z7/5MqU/+PJk//kypXU4subF+LGhgDXzvEV1szzNdbK8x3r2/8AzcTlAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD0470A9OO+TPTjvPrz4rv/8uG4//Hgtv/w37X/8N+z/+/fsf/w3bD/8d2v//Lc
        rv/x263/79qt/+XPoP/gyJX/28KM+9O3gIPKsoUD0rmJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPTjvgD0479M9OS9+vTjvP/z4rv/8eK5//Hgt//w4Lb/8N+0//Df
        sv/w3rD/8d2v//HesP/z4rn/8uG4/+3arPvn0aGR4cyhDePNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9OS/APTkwUz05L769OO9//TjvP/y4rv/8uK5//Hg
        t//x37b/8N+0//Hfsv/x3rD/8d+x//Hgtv/t2ar65c+ejdzFlA3gyZcAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD15cEA9eXCOvXkwPH0477/9eS9//Tj
        vP/z47v/8uK5//Hgt//x37b/8N+0//Hesv/w3rH/7dmr+ebPnonaw5ML3siXAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPXnxgD158cK9eXBi/Xl
        wN715L7i9OS94/PjvOPy4rvj8uG44/Hgt+Px37bk8d+15e/est7m0qB+2sGPCt/IlwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPTm
        xAD058YG9OfEHfTmwyHz5cEj8+TAI/LjvyPy4r0j8eK8I/HguiPw4Lkk7+C4HebWrQXq27QAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////////////////4AB//8AAP/+AAB//gAAf/4A
        AH/wAAAP8AAAD/AAAA/4AAAf4AAAD8AAAAfAAAADwAAAA8AAAAPCAABH/gAAf/4AAP/+AAH//gAD//4A
        B///AA////////////////////////////8=
</value>
  </data>
</root>